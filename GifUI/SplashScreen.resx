<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhNAHMAPcAADyWxNTSzOz2/ARChPz+/GSW3LTK7PT6/PT+/Oz6/Oz+/OT6/OT2/Nzu/OT+/OTy
        /Nz2/Nzy/Nz6/NT2/NTy/NT6/Mzy/Mzu/Mz2/MTu/MTy/Lzu/Lzq/LTq/Lzy/LTu/Kzq/Kzm/Kzu/KTm
        /KTq/Jzi/Jzm/Jzq/JTi/JTm/JTe/Ize/Izi/ITe/ITa/ITi/Hza/Hze/HTW/HTa/HTe/GzW/HTS/GzO
        /GzS/HTO/HTK/HTG/HTC/HzG/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAAAANAHMAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgPBgAgoKPHjyBDihxJsqTJkyhT
        qlzJsqXLlzBjypwJEsBGmjhz6tzJs6fPn0BL2uQYtKjRo0iTKj06dKnTp1CjSmV68yOBq1izat3KtavX
        r2DDih1LtqzZs2jTql3L1qyBkE0/FphLt67du3jz6t3Lt6/fv4ADCx5MuLDhw4gHw63qscAOHj14PI48
        WTJky5QvV96suXPmz5hDcwY9WrRn06RPl16tunXq16hjs4Y9W7Zr27Rv1959ucBioo0tPx4uvDjx48aT
        I1+uvDnz586jQ58uvTr169azY9+uvTv35b5rMv/uWCC3edzoeZ9Xn163+/Xv28OfL78++/vxH4f/GDf4
        jv+SAfjfcAIWSOCBASI4YIIMLuiggQ1C+KCCElZI4YURYjhhhhxu6KGFHYL4oYYilkjiiQnu51F/5P2n
        w4AvugjjjDLWuEOMN9KYo4049qijjzz+KGSQRO5oJJBHDplkkUg2qaSTTD4pZZRULmkllDmq2BGLAjj2
        4pc5gilmmGSOaWaZaJ6pZppsrulmm3C+KWecdM5pZ5143qlnnmVqKQCXBeSwQw46CEqooYUOmuihiiLq
        aKOQMirpopQ+OqmllUaa6aWaYuppp6ByKuqmpH46qqmlhprqqaqi6qqifgL/WmgOh9I6a6243qorrbny
        uqutvgYL7LC9Evtrscgeq6ywyTK7rLHORgvttM1S+2y12F6rrbS4xjpel7TawKu44Y5rbrno5kCuuuey
        m+668LYb77vy1kvvve7mO6++9vKL774A9xvwvwIXTPDB/iY8MLveAkfeDeLaALG6E0scccUYX6wxxRtb
        zPHHHoecMcgji9xxySifrDLJK5vM8ssux5wyzDPL3HLNON+ss7oNg1SADDfIgAPQQhM9dNBHF4200Uwv
        7bTSUCctddNRUz3101dXjbXVXG/ttdZgZy1212GTPfbXZ5eNttlsI92zXDbIIHfcc8stA91324333nr3
        /13333kDzrfgfgdu+OCHF4744oo3TvjjiUPOuOSOR2755JdXjvnmmtv9dmNyz2C36KGPbnrpqMtAuuqn
        s5766rC3HvvrstdO++2u5z677rbzjvvuwPce/O/CF0/88b4nPzzrn5NXwwzPRw/99NJXT/311meP/fba
        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
</value>
  </data>
</root>